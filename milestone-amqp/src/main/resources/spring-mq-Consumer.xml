<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="cn.zsy.mq.listener"/>

    <!-- 连接服务配置  -->
    <rabbit:connection-factory id="connectionFactory" host="52.32.61.43" username="guest"
                               password="guest" port="5672"/>

    <rabbit:admin connection-factory="connectionFactory"/>

    <!-- queue 队列声明-->
    <rabbit:queue id="queue_one" durable="true" auto-delete="false" exclusive="false" name="queue_one"/>


    <!-- exchange queue binging key 绑定 -->
    <rabbit:direct-exchange name="my-mq-exchange" durable="true" auto-delete="false" id="my-mq-exchange">
        <rabbit:bindings>
            <rabbit:binding queue="queue_one" key="queue_one_key"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>


    <!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象-->
    <!--
    描述
    acknowledge:
                NONE: 不发送应答(与channelTransacted=true不兼容). RabbitMQ 称此为 "autoack"，因为broker假设消费者没有采取
                       任何动作应答了所有消息．
                MANUAL：监听器必须调用Channel.basicAck()来手动应答所有消息.
                AUTO ：容器会自动应答所有消息, 除非MessageListener 抛出了异常. 注意acknowledgeMode 与channelTransacted 是互
                       补的- 如果通道是事务的，那么broker除了ack外，还需要提交通知. 这是默认模式. 也可参考txSize.
    concurrency:
                每个监听器上初始启动的并发消费者数目
    max-concurrency：
                 启动并发消费者的最大数目,如果有必要，可以按需设置．必须要大于或等于concurrentConsumers
    -->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto"
                               concurrency="10"
                               max-concurrency="20">
        <rabbit:listener queues="queue_one" ref="queueOneLitener"/>
    </rabbit:listener-container>

</beans>